//created on: Feb 25, 2013
package com.hcentive.eligibility.determination;

import com.hcentive.rulesengine.domain.EEDeterminationRuleFacts;
import com.hcentive.eligibility.domain.ext.program_status;
import com.hcentive.rulesengine.domain.EEDeterminationRuleFacts.noSSNReasonCodeType;
import com.hcentive.eligibility.ext.CitizenshipStatusEnum;
import com.hcentive.eligibility.ext.UserMECResponseEnum;
import com.hcentive.eligibility.EligibilityVerificationTypeEnum;
import com.hcentive.eligibility.ext.ClockNameEnum;
import com.hcentive.utils.ext.HXConstants;
import com.hcentive.utils.ext.HXUtility;
import com.hcentive.eligibility.domain.ext.ProgramReasonCode;
import com.hcentive.eligibility.domain.ext.ProgramCode;

global org.slf4j.Logger logger;


rule "MAIN_APTC_VERIFY_SEC2"
salience 100000
	when
		$eDeterminationfacts : EEDeterminationRuleFacts();
	then
		logger.debug("Rule : MAIN_APTC_VERIFY_SEC2 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "MAIN_APTC_VERIFY_SEC2");
		$eDeterminationfacts.setRuleExecCompletionStep(ProgramCode.APTC, HXConstants.RULE_EXEC_STEP_SEC1_03_ACK);
		drools.setFocus("MAIN_APTC_VERIFY_SEC2_STALE_1_AG");
		logger.debug("Rule : MAIN_APTC_VERIFY_SEC2 : End");
end


//CR1606
rule "MAIN_APTC_VERIFY_SEC2_STALE_ELG_SEC_01"
salience 95060
activation-group "MAIN_APTC_VERIFY_SEC2_STALE_1_AT"
agenda-group "MAIN_APTC_VERIFY_SEC2_STALE_1_AG"
	when
		$eDeterminationfacts : EEDeterminationRuleFacts(isStaleEligibility);
		//eval(true);		
	then
		logger.debug("Rule : MAIN_APTC_VERIFY_SEC2_STALE_ELG_SEC_01 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "MAIN_APTC_VERIFY_SEC2_STALE_ELG_SEC_01");
		$eDeterminationfacts.setRuleExecCompletionStep(ProgramCode.APTC, HXConstants.RULE_EXEC_STEP_SEC2_03);
		logger.debug("Rule : MAIN_APTC_VERIFY_SEC2_STALE_ELG_SEC_01 : End");
end

rule "MAIN_APTC_VERIFY_SEC2_STALE_ELG_SEC_03"
salience 95050
activation-group "MAIN_APTC_VERIFY_SEC2_STALE_1_AT"
agenda-group "MAIN_APTC_VERIFY_SEC2_STALE_1_AG"
	when
		$eDeterminationfacts : EEDeterminationRuleFacts(!isStaleEligibility);
		//eval(true);		
	then
		logger.debug("Rule : MAIN_APTC_VERIFY_SEC2_STALE_ELG_SEC_03 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "MAIN_APTC_VERIFY_SEC2_STALE_ELG_SEC_03");
		drools.setFocus("Aptc_RULE_FLIP_AG");
		logger.debug("Rule : MAIN_APTC_VERIFY_SEC2_STALE_ELG_SEC_03 : End");
end

//CR1606 code changes end


rule "Aptc_RULE_FLIP_INCAR"
salience 2002
activation-group "Aptc_RULE_FLIP_AT"
agenda-group "Aptc_RULE_FLIP_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts("Aptc_INCAR_1_AG".equals(isRunRequiredForSheet));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_RULE_FLIP_INCAR : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_RULE_FLIP_INCAR");
		drools.setFocus("Aptc_INCAR_1_AG");
		logger.debug("Rule : Aptc_RULE_FLIP_INCAR : End");
end 

rule "Aptc_RULE_FLIP_IMIG"
salience 2001
activation-group "Aptc_RULE_FLIP_AT"
agenda-group "Aptc_RULE_FLIP_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!("Aptc_INCAR_1_AG".equals(isRunRequiredForSheet)));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_RULE_FLIP_IMIG : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_RULE_FLIP_IMIG");
		drools.setFocus("Aptc_IMIG_1_AG");
		logger.debug("Rule : Aptc_RULE_FLIP_IMIG : End");
end

//Aptc immigration(1)

rule "Aptc_Immigration_1_1"
salience 15000
activation-group "Aptc_IMIG_1_AT"
agenda-group "Aptc_IMIG_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(CitizenshipStatusEnum.US_CITIZEN.equals(citizenshipType) || 
														CitizenshipStatusEnum.NATURALIZED_CITIZEN.equals(citizenshipType));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_1_1 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_1_1");		
		drools.setFocus("Aptc_INCAR_1_AG");
		logger.debug("Rule : Aptc_Immigration_1_1 : End");
end

//CR522
rule "Aptc_Immigration_1V1_0"
salience 14998
activation-group "Aptc_IMIG_1_AT"
agenda-group "Aptc_IMIG_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts((CitizenshipStatusEnum.IMMIGRANT_NON_CITIZEN.equals(citizenshipType) || 
														CitizenshipStatusEnum.NON_IMMIGRANT_VISA_HOLDER.equals(citizenshipType)),
														isCSVLPOvrideLessThanThldDaysOrKeyChg);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_1V1_0 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_1V1_0");
		drools.setFocus("Aptc_IMIG_2_AG");
		drools.setFocus("Aptc_IMIG_1a_AG");
		logger.debug("Rule : Aptc_Immigration_1V1_0 : End");
end

rule "Aptc_Immigration_1V1_1"
salience 14998
activation-group "Aptc_IMIG_1_AT"
agenda-group "Aptc_IMIG_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts((CitizenshipStatusEnum.IMMIGRANT_NON_CITIZEN.equals(citizenshipType) || 
														CitizenshipStatusEnum.NON_IMMIGRANT_VISA_HOLDER.equals(citizenshipType)),
														HXConstants.INDICATOR_YES.equals(vlpUSCitizenCode));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_1V1_1 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_1V1_1");
		drools.setFocus("Aptc_IMIG_2B_AG");
		drools.setFocus("Aptc_IMIG_1a_AG");
		logger.debug("Rule : Aptc_Immigration_1V1_1 : End");
end

rule "Aptc_Immigration_1_1A"
salience 14998
activation-group "Aptc_IMIG_1_AT"
agenda-group "Aptc_IMIG_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts((CitizenshipStatusEnum.IMMIGRANT_NON_CITIZEN.equals(citizenshipType) || 
														CitizenshipStatusEnum.NON_IMMIGRANT_VISA_HOLDER.equals(citizenshipType)),
														(isMissing_Alien_and_I94_data && !isCSVLPOverride));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_1_1A : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_1_1A");		
		drools.setFocus("Aptc_IMIG_2_AG");
		drools.setFocus("Aptc_IMIG_1a_AG");
		logger.debug("Rule : Aptc_Immigration_1_1A : End");
end

rule "Aptc_Immigration_1_2"
salience 14995
activation-group "Aptc_IMIG_1_AT"
agenda-group "Aptc_IMIG_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts((CitizenshipStatusEnum.IMMIGRANT_NON_CITIZEN.equals(citizenshipType) || 
														CitizenshipStatusEnum.NON_IMMIGRANT_VISA_HOLDER.equals(citizenshipType)),
														isFailureToProvideImmiDocInd);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_1_2 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_1_2");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.INELIGIBLE, ProgramReasonCode.FVIS);
		drools.setFocus("Aptc_IMIG_4_AG");
		drools.setFocus("Aptc_IMIG_1a_AG");
		logger.debug("Rule : Aptc_Immigration_1_2 : End");
end

//Rule "F"
rule "Aptc_Immigration_1_2_1"
salience 14993
activation-group "Aptc_IMIG_1_AT"
agenda-group "Aptc_IMIG_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts((CitizenshipStatusEnum.IMMIGRANT_NON_CITIZEN.equals(citizenshipType) || 
														CitizenshipStatusEnum.NON_IMMIGRANT_VISA_HOLDER.equals(citizenshipType)),
														getIsHIXPrucol(),
														!getIsPrucolVerReqInd());
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_1_2_1 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_1_2_1");
		drools.setFocus("Aptc_IMIG_4_AG");
		drools.setFocus("Aptc_IMIG_1a_AG");
		logger.debug("Rule : Aptc_Immigration_1_2_1 : End");
end

// Rule "G"
rule "Aptc_Immigration_1_2A"
salience 14992
activation-group "Aptc_IMIG_1_AT"
agenda-group "Aptc_IMIG_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts((CitizenshipStatusEnum.IMMIGRANT_NON_CITIZEN.equals(citizenshipType) || 
														CitizenshipStatusEnum.NON_IMMIGRANT_VISA_HOLDER.equals(citizenshipType)),
														getIsHIXPrucol(),
														getIsPrucolVerReqInd());
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_1_2A : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_1_2A");
		drools.setFocus("Aptc_IMIG_4_AG");
		drools.setFocus("Aptc_IMIG_2_AG");
		drools.setFocus("Aptc_IMIG_1a_AG");
		logger.debug("Rule : Aptc_Immigration_1_2A : End");
end

//Added for CRR 1234 for usecase 7 Rule 
rule "Aptc_Immigration_1_2B"
salience 14991
activation-group "Aptc_IMIG_1_AT"
agenda-group "Aptc_IMIG_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts((CitizenshipStatusEnum.IMMIGRANT_NON_CITIZEN.equals(citizenshipType) || 
														CitizenshipStatusEnum.NON_IMMIGRANT_VISA_HOLDER.equals(citizenshipType)),
														HXConstants.LAWFUL_PRESENCE_PENDING.equals(isMemberLawfullyPresent),
														!getIsHIXPrucol(),
														!isVLPStepThreeComplete,
														!isVLPStepTwo,
														!(HXConstants.INDICATOR_NO.equals(dhsAutoTriggerStepTwo) || HXConstants.INDICATOR_NO.equals(dhsAutoTriggerStepThree)));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_1_2B : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_1_2B");
		$eDeterminationfacts.getElgRulesIndicatorForProgram(ProgramCode.APTC).setStartClockNoNoticeInd(Boolean.TRUE);		
		drools.setFocus("Aptc_IMIG_4_AG");
		drools.setFocus("Aptc_IMIG_2_AG");
		drools.setFocus("Aptc_IMIG_1a_AG");
		logger.debug("Rule : Aptc_Immigration_1_2B : End");
end

rule "Aptc_Immigration_1_3"
salience 14990
activation-group "Aptc_IMIG_1_AT"
agenda-group "Aptc_IMIG_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts((CitizenshipStatusEnum.IMMIGRANT_NON_CITIZEN.equals(citizenshipType) || 
														CitizenshipStatusEnum.NON_IMMIGRANT_VISA_HOLDER.equals(citizenshipType)),
														!isFailureToProvideImmiDocInd,
														!getIsHIXPrucol(),
														HXConstants.LAWFUL_PRESENCE_PENDING.equals(isMemberLawfullyPresent),
		                                                !isVLPStepTwo,
														!(HXConstants.INDICATOR_NO.equals(dhsAutoTriggerStepTwo) || HXConstants.INDICATOR_NO.equals(dhsAutoTriggerStepThree)));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_1_3 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_1_3");
		drools.setFocus("Aptc_IMIG_2_AG");
		drools.setFocus("Aptc_IMIG_1a_AG");
		logger.debug("Rule : Aptc_Immigration_1_3 : End");
end


rule "Aptc_Immigration_1_3A"
salience 14987
activation-group "Aptc_IMIG_1_AT"
agenda-group "Aptc_IMIG_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts((CitizenshipStatusEnum.IMMIGRANT_NON_CITIZEN.equals(citizenshipType) || 
														CitizenshipStatusEnum.NON_IMMIGRANT_VISA_HOLDER.equals(citizenshipType)),
														!isFailureToProvideImmiDocInd,
														!getIsHIXPrucol(),
														HXConstants.LAWFUL_PRESENCE_PENDING.equals(isMemberLawfullyPresent),
														isVLPStepTwo,														
														!(HXConstants.INDICATOR_NO.equals(dhsAutoTriggerStepTwo) || HXConstants.INDICATOR_NO.equals(dhsAutoTriggerStepThree)));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_1_3A : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_1_3A");
		$eDeterminationfacts.getElgRulesIndicatorForProgram(ProgramCode.APTC).setImmigCSManualResolveInd(Boolean.TRUE);
		drools.setFocus("Aptc_IMIG_2_AG");
		drools.setFocus("Aptc_IMIG_1a_AG");
		logger.debug("Rule : Aptc_Immigration_1_3A : End");
end

rule "Aptc_Immigration_1_4"
salience 14985
activation-group "Aptc_IMIG_1_AT"
agenda-group "Aptc_IMIG_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts((CitizenshipStatusEnum.IMMIGRANT_NON_CITIZEN.equals(citizenshipType) || 
														CitizenshipStatusEnum.NON_IMMIGRANT_VISA_HOLDER.equals(citizenshipType)),
														!isFailureToProvideImmiDocInd,
														!getIsHIXPrucol(),														
														HXConstants.LAWFUL_PRESENCE_PENDING.equals(isMemberLawfullyPresent),
														(HXConstants.INDICATOR_NO.equals(dhsAutoTriggerStepTwo) || HXConstants.INDICATOR_NO.equals(dhsAutoTriggerStepThree)));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_1_4 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_1_4");
		$eDeterminationfacts.getElgRulesIndicatorForProgram(ProgramCode.APTC).setImmigCSManualResolveInd(Boolean.TRUE);
		drools.setFocus("Aptc_IMIG_2_AG");
		drools.setFocus("Aptc_IMIG_1a_AG");
		logger.debug("Rule : Aptc_Immigration_1_4 : End");
end

rule "Aptc_Immigration_1_5"
salience 14980
activation-group "Aptc_IMIG_1_AT"
agenda-group "Aptc_IMIG_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts((CitizenshipStatusEnum.IMMIGRANT_NON_CITIZEN.equals(citizenshipType) || 
														CitizenshipStatusEnum.NON_IMMIGRANT_VISA_HOLDER.equals(citizenshipType)),
														!isFailureToProvideImmiDocInd,
														!getIsHIXPrucol(),
														HXConstants.LAWFUL_PRESENCE_VERIFIED.equals(isMemberLawfullyPresent));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_1_5 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_1_5");
		drools.setFocus("Aptc_IMIG_3_AG");
		drools.setFocus("Aptc_IMIG_1a_AG");
		logger.debug("Rule : Aptc_Immigration_1_5 : End");
end

rule "Aptc_Immigration_1_6"
salience 14970
activation-group "Aptc_IMIG_1_AT"
agenda-group "Aptc_IMIG_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts((CitizenshipStatusEnum.IMMIGRANT_NON_CITIZEN.equals(citizenshipType) || 
														CitizenshipStatusEnum.NON_IMMIGRANT_VISA_HOLDER.equals(citizenshipType)),
														!isFailureToProvideImmiDocInd,
														!getIsHIXPrucol(),
														HXConstants.LAWFUL_PRESENCE_NOT_VERIFIED.equals(isMemberLawfullyPresent));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_1_6 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_1_6");
		
		//Not marking In-eligible when VLP is 'N'  - Modified for CR 263 2/5/2014 part of Lawful presence = N changes
		//$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.INELIGIBLE, ProgramReasonCode.CISF);
		
		drools.setFocus("Aptc_IMIG_2_AG");
		drools.setFocus("Aptc_IMIG_1a_AG");
		logger.debug("Rule : Aptc_Immigration_1_6 : End");
end


rule "Aptc_Immigration_1_7"
salience 14960
activation-group "Aptc_IMIG_1_AT"
agenda-group "Aptc_IMIG_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(CitizenshipStatusEnum.OTHER.equals(citizenshipType));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_1_7 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_1_7");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.INELIGIBLE, ProgramReasonCode.CISF);
		drools.setFocus("Aptc_INCAR_1_AG");
		logger.debug("Rule : Aptc_Immigration_1_7 : End");
end


// Added for CR1151
//Aptc Immigration (1a)

rule "Aptc_Immigration_1a_1"
salience 14950
activation-group "Aptc_IMIG_1a_AT"
agenda-group "Aptc_IMIG_1a_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(isMedicaidDeemedCitizenship);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_1a_1 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_1a_1");
		$eDeterminationfacts.getMember().setIsMedicaidDeemedCitizen(Boolean.FALSE); 
		logger.debug("Rule : Aptc_Immigration_1a_1 : End");
end


rule "Aptc_Immigration_1a_2"
salience 14940
activation-group "Aptc_IMIG_1a_AT"
agenda-group "Aptc_IMIG_1a_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!(isMedicaidDeemedCitizenship));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_1a_2 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_1a_2");
		logger.debug("Rule : Aptc_Immigration_1a_2 : End");
end

//Aptc Immigration(2)

rule "Aptc_Immigration_2_1"
salience 9995
activation-group "Aptc_IMIG_2_AT"
agenda-group "Aptc_IMIG_2_AG"
when
	//<CONDITION>
	$eDeterminationfacts : EEDeterminationRuleFacts(isProposedElgForRenewal);
then
	//<ACTIONS>
	logger.debug("Rule : Aptc_Immigration_2_1 : Begin");
	$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2_1");
	$eDeterminationfacts.getElgRulesIndicatorForProgram(ProgramCode.APTC).setManualRenewalInd(Boolean.TRUE);
	$eDeterminationfacts.updateProgram(ProgramCode.APTC,program_status.INELIGIBLE, ProgramReasonCode.MRR);
	drools.setFocus("Aptc_IMIG_4_AG");
	logger.debug("Rule : Aptc_Immigration_2_1 : End");
end

rule "Aptc_Immigration_2_2"
salience 9990
activation-group "Aptc_IMIG_2_AT"
agenda-group "Aptc_IMIG_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isProposedElgForRenewal,
														isCSVLPOverride);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_2_2 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2_2");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.INELIGIBLE, ProgramReasonCode.VDSNLP);
		drools.setFocus("Aptc_IMIG_4_AG");
		logger.debug("Rule : Aptc_Immigration_2_2 : End");
end

rule "Aptc_Immigration_2_3"
salience 9985
activation-group "Aptc_IMIG_2_AT"
agenda-group "Aptc_IMIG_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isProposedElgForRenewal,
														!isCSVLPOverride,
														isMissing_Alien_and_I94_data,
														!isImigVerificationNoticeSent);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_2_3 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2_3");
		drools.setFocus("Aptc_INCAR_1_AG");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.ISNV_NO_ALN_I94);
		$eDeterminationfacts.getElgRulesIndicatorForProgram(ProgramCode.APTC).setIsMissing_Alien_and_I94_data(true);
		$eDeterminationfacts.setClocks(ProgramCode.APTC, EligibilityVerificationTypeEnum.IMMIGRATION_STATUS, ClockNameEnum.IMMIGRATION_90);
		
		logger.debug("Rule : Aptc_Immigration_2_3 : End");
end

rule "Aptc_Immigration_2_4"
salience 9980
activation-group "Aptc_IMIG_2_AT"
agenda-group "Aptc_IMIG_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isProposedElgForRenewal,
														!isCSVLPOverride,
														isMissing_Alien_and_I94_data,
														isImigVerificationNoticeSent,
														!isimigClockExpired);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_2_4 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2_4");
		drools.setFocus("Aptc_INCAR_1_AG");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.ISNV_NO_ALN_I94);
		$eDeterminationfacts.getElgRulesIndicatorForProgram(ProgramCode.APTC).setIsMissing_Alien_and_I94_data(true);
		$eDeterminationfacts.setClocks(ProgramCode.APTC, EligibilityVerificationTypeEnum.IMMIGRATION_STATUS, ClockNameEnum.IMMIGRATION_90);
		logger.debug("Rule : Aptc_Immigration_2_4 : End");
end

rule "Aptc_Immigration_2_5"
salience 9975
activation-group "Aptc_IMIG_2_AT"
agenda-group "Aptc_IMIG_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isProposedElgForRenewal,
														!isCSVLPOverride,
														isMissing_Alien_and_I94_data,
														isImigVerificationNoticeSent,
														isimigClockExpired);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_2_5 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2_5");
		drools.setFocus("Aptc_INCAR_1_AG");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.INELIGIBLE, ProgramReasonCode.ISNV_NO_ALN_I94_90);
		logger.debug("Rule : Aptc_Immigration_2_5 : End");
end

//Added for CRR 1234 for usecase 7
rule "Aptc_Immigration_2_5A"
salience 9974
activation-group "Aptc_IMIG_2_AT"
agenda-group "Aptc_IMIG_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isProposedElgForRenewal,
														!isCSVLPOverride,
														!isMissing_Alien_and_I94_data,
														!isImigVerificationNoticeSent
														);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_2_5A : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2_5A");
		$eDeterminationfacts.setClocks(ProgramCode.APTC, EligibilityVerificationTypeEnum.IMMIGRATION_STATUS, ClockNameEnum.IMMIGRATION_90);	
		if(HXUtility.isTrue($eDeterminationfacts.getElgRulesIndicatorForProgram(ProgramCode.APTC).getIsStartClockNoNoticeInd())) 
		{
			// Need to trigger Schedule 90 Day notice Trigger
			$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.ISNV_S1);
			$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2_5A_1");
		}
		else if(!HXUtility.isTrue($eDeterminationfacts.getElgRulesIndicatorForProgram(ProgramCode.APTC).getIsStartClockNoNoticeInd())) 
		{
			// Need to trigger Schedule Verification Notice Trigger & Schedule 90 Day notice Trigger
			$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.ISNV);	
			$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2_5A_2");	
		}	
		drools.setFocus("Aptc_IMIG_4_AG");
		logger.debug("Rule : Aptc_Immigration_2_5A : End");
end

//Added for CRR 1234 for usecase 7
rule "Aptc_Immigration_2_5B"
salience 9973
activation-group "Aptc_IMIG_2_AT"
agenda-group "Aptc_IMIG_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isProposedElgForRenewal,
														!isCSVLPOverride,
														!isMissing_Alien_and_I94_data,
														!isStartClockNoNoticeInd,
														isCurrentStep2DataInd,
														isImigVerificationNoticeSent,
														!isimigClockExpired);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_2_5B : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2_5B");
		$eDeterminationfacts.resetClock(ProgramCode.APTC, EligibilityVerificationTypeEnum.IMMIGRATION_STATUS, ClockNameEnum.IMMIGRATION_90);
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.ISNV);
		drools.setFocus("Aptc_IMIG_4_AG");	
		logger.debug("Rule : Aptc_Immigration_2_5B : End");
end

//Added for CRR 1234 for usecase 7
rule "Aptc_Immigration_2_5C"
salience 9971
activation-group "Aptc_IMIG_2_AT"
agenda-group "Aptc_IMIG_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isProposedElgForRenewal,
														!isCSVLPOverride,
														!isMissing_Alien_and_I94_data,
														isImigVerificationNoticeSent,
														!isimigClockExpired
														);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_2_5C : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2_5C");
		$eDeterminationfacts.setClocks(ProgramCode.APTC, EligibilityVerificationTypeEnum.IMMIGRATION_STATUS, ClockNameEnum.IMMIGRATION_90);	
		if(HXUtility.isTrue($eDeterminationfacts.getElgRulesIndicatorForProgram(ProgramCode.APTC).getIsStartClockNoNoticeInd())) 
		{
			// Need to trigger Schedule 90 Day notice Trigger
			$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.ISNV_S1);
			$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2_5C_1");
			
		} else if(!HXUtility.isTrue($eDeterminationfacts.getElgRulesIndicatorForProgram(ProgramCode.APTC).getIsStartClockNoNoticeInd())) 
		{
			// Need to trigger Schedule Verification Notice Trigger & Schedule 90 Day notice Trigger
			$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.ISNV);	
			$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2_5C_2");	
		}
			
		drools.setFocus("Aptc_INCAR_1_AG");
		logger.debug("Rule : Aptc_Immigration_2_5C : End");
end

rule "Aptc_Immigration_2_6"
salience 9970
activation-group "Aptc_IMIG_2_AT"
agenda-group "Aptc_IMIG_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isProposedElgForRenewal,
														!isCSVLPOverride,
														!(isMissing_Alien_and_I94_data),
														isImigVerificationNoticeSent,
														isimigClockExpired
														);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_2_6 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2_6");
		
		if(HXUtility.isTrue($eDeterminationfacts.getElgRulesIndicatorForProgram(ProgramCode.APTC).getIsStartClockNoNoticeInd())) 
		{
			// Need to trigger Schedule 90 Day notice Trigger
			$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.INELIGIBLE, ProgramReasonCode.ISNV_S1_90);
			$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2_6_1");
			
		} else if(!HXUtility.isTrue($eDeterminationfacts.getElgRulesIndicatorForProgram(ProgramCode.APTC).getIsStartClockNoNoticeInd())) 
		{
			// Need to trigger Schedule Verification Notice Trigger & Schedule 90 Day notice Trigger
			$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.INELIGIBLE, ProgramReasonCode.ISNVP_90);
			$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2_6_2");	
		}
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.ISNV);
		drools.setFocus("Aptc_INCAR_1_AG");
		logger.debug("Rule : Aptc_Immigration_2_6 : End");
end


//Aptc Immigration(2B)
rule "Aptc_Immigration_2B_0"
salience 68000
activation-group "Aptc_IMIG_2B_AT"
agenda-group "Aptc_IMIG_2B_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(isProposedElgForRenewal);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_2B_0 : Begin");		
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2B_0");
		$eDeterminationfacts.getElgRulesIndicatorForProgram(ProgramCode.APTC).setManualRenewalInd(Boolean.TRUE);
		$eDeterminationfacts.updateProgram(ProgramCode.APTC,program_status.INELIGIBLE, ProgramReasonCode.MRR);
		drools.setFocus("Aptc_INCAR_1_AG");
		logger.debug("Rule : Aptc_Immigration_2B_0 : End");
end

rule "Aptc_Immigration_2B_1"
salience 67995
activation-group "Aptc_IMIG_2B_AT"
agenda-group "Aptc_IMIG_2B_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isProposedElgForRenewal,
														!isCitiDiscrepancyVerificationNoticeSent);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_2B_1 : Begin");		
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.CD_IMMIG);
		//TO DO
		//Schedule Verification Notice Trigger
		$eDeterminationfacts.setClocks(ProgramCode.APTC, EligibilityVerificationTypeEnum.CITIZENSHIP_DISCREPANCY, ClockNameEnum.CITIZENSHIP_DISCREPANCY_90);
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2B_1");
		drools.setFocus("Aptc_INCAR_1_AG");
		logger.debug("Rule : Aptc_Immigration_2B_1 : End");
end

rule "Aptc_Immigration_2B_2"
salience 67990
activation-group "Aptc_IMIG_2B_AT"
agenda-group "Aptc_IMIG_2B_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isProposedElgForRenewal,
														isCitiDiscrepancyVerificationNoticeSent,
														!isCitiDiscrepancyClockExpired);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_2B_2 : Begin");		
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.CD_IMMIG);
		$eDeterminationfacts.setClocks(ProgramCode.APTC, EligibilityVerificationTypeEnum.CITIZENSHIP_DISCREPANCY, ClockNameEnum.CITIZENSHIP_DISCREPANCY_90);
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2B_2");
		drools.setFocus("Aptc_INCAR_1_AG");
		logger.debug("Rule : Aptc_Immigration_2B_2 : End");
end

rule "Aptc_Immigration_2B_3"
salience 67980
activation-group "Aptc_IMIG_2B_AT"
agenda-group "Aptc_IMIG_2B_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isProposedElgForRenewal,
														isCitiDiscrepancyVerificationNoticeSent,
														isCitiDiscrepancyClockExpired);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_2B_3 : Begin");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.INELIGIBLE, ProgramReasonCode.CDP_90_IMMIG);
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_2B_3");
		drools.setFocus("Aptc_INCAR_1_AG");
		logger.debug("Rule : Aptc_Immigration_2B_3 : End");
end


//Aptc Immigration(3)

rule "Aptc_Immigration_3_1"
salience 9000
activation-group "Aptc_IMIG_3_AT"
agenda-group "Aptc_IMIG_3_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts();
		eval(true);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_3_1 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_3_1");		
		drools.setFocus("Aptc_IMIG_4_AG");
		logger.debug("Rule : Aptc_Immigration_3_1 : End");
end

//Aptc Immigration (4)

rule "Aptc_Immigration_4_1"
salience 54000
activation-group "Aptc_IMIG_4_AT"
agenda-group "Aptc_IMIG_4_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(HXConstants.INDICATOR_YES.equals(vlpUSCitizenCode));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_4_1 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_4_1");
		drools.setFocus("Aptc_IMIG_2B_AG");
		logger.debug("Rule : Aptc_Immigration_4_1 : End");
end

rule "Aptc_Immigration_4_2"
salience 54000
activation-group "Aptc_IMIG_4_AT"
agenda-group "Aptc_IMIG_4_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!HXConstants.INDICATOR_YES.equals(vlpUSCitizenCode));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Immigration_4_2 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Immigration_4_2");
		drools.setFocus("Aptc_INCAR_1_AG");
		logger.debug("Rule : Aptc_Immigration_4_2 : End");
end



//Aptc Incarceration(1)

rule "Aptc_Incarceration_1_1"
salience 8000
activation-group "Aptc_INCAR_1_AT"
agenda-group "Aptc_INCAR_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isHXIncarcerated, 
														!isNonIncarcerationVerified,
														!selfIdentifiedIncarcerationInCurrentApp);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_1_1 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_1_1");
		drools.setFocus("Aptc_INCAR_3_AG");
		logger.debug("Rule : Aptc_Incarceration_1_1 : End");
end

rule "Aptc_Incarceration_1_2"
salience 7990
activation-group "Aptc_INCAR_1_AT"
agenda-group "Aptc_INCAR_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isHXIncarcerated,
														selfIdentifiedIncarcerationInCurrentApp);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_1_2 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_1_2");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.INELIGIBLE, ProgramReasonCode.ICVSI);
		drools.setFocus("Aptc_RESID_1_AG");
		logger.debug("Rule : Aptc_Incarceration_1_2 : End");
end

rule "Aptc_Incarceration_1_3"
salience 7980
activation-group "Aptc_INCAR_1_AT"
agenda-group "Aptc_INCAR_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isHXIncarcerated, 
														isNonIncarcerationVerified,
														!selfIdentifiedIncarcerationInCurrentApp);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_1_3 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_1_3");
		drools.setFocus("Aptc_RESID_1_AG");
		logger.debug("Rule : Aptc_Incarceration_1_3 : End");
end


rule "Aptc_Incarceration_1_4"
salience 7970
activation-group "Aptc_INCAR_1_AT"
agenda-group "Aptc_INCAR_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(isHXIncarcerated,
														doesUserAgreeIncarceration);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_1_4 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_1_4");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.INELIGIBLE, ProgramReasonCode.ICUA);
		drools.setFocus("Aptc_RESID_1_AG");
		logger.debug("Rule : Aptc_Incarceration_1_4 : End");
end

rule "Aptc_Incarceration_1_4A"
salience 7965
activation-group "Aptc_INCAR_1_AT"
agenda-group "Aptc_INCAR_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(isHXIncarcerated,
														!doesUserAgreeIncarceration,
														isProposedElgForRenewal);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_1_4A : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_1_4A");
		//$eDeterminationfacts.getElgRulesIndicatorForProgram(ProgramCode.APTC).setManualRenewalInd(Boolean.TRUE);
		//$eDeterminationfacts.updateProgram(ProgramCode.APTC,program_status.INELIGIBLE, ProgramReasonCode.MRR);
		$eDeterminationfacts.updateProgram(ProgramCode.APTC,program_status.INELIGIBLE, ProgramReasonCode.IAR);
		drools.setFocus("Aptc_RESID_1_AG");
		logger.debug("Rule : Aptc_Incarceration_1_4A : End");
end

rule "Aptc_Incarceration_1_5"
salience 7960
activation-group "Aptc_INCAR_1_AT"
agenda-group "Aptc_INCAR_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(isHXIncarcerated,
														!doesUserAgreeIncarceration,
														!isProposedElgForRenewal,
														!isNonIncarcerationVerified);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_1_5 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_1_5");
		drools.setFocus("Aptc_INCAR_2_AG");
		logger.debug("Rule : Aptc_Incarceration_1_5 : End");
end

rule "Aptc_Incarceration_1_6"
salience 7950
activation-group "Aptc_INCAR_1_AT"
agenda-group "Aptc_INCAR_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(isHXIncarcerated,
														!doesUserAgreeIncarceration,
														!isProposedElgForRenewal,
														isNonIncarcerationVerified);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_1_6 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_1_6");
		drools.setFocus("Aptc_RESID_1_AG");
		logger.debug("Rule : Aptc_Incarceration_1_6 : End");
end


//Aptc Incarceration(2)

rule "Aptc_Incarceration_2_1"
salience 7000
activation-group "Aptc_INCAR_2_AT"
agenda-group "Aptc_INCAR_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(fedIncarcerationStatus,
														!(isIncarceration_90_NoticeSent));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_2_1 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_2_1");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.IC);
		//TO DO
		//Schedule Verification Notice Trigger				
		$eDeterminationfacts.setClocks(ProgramCode.APTC, EligibilityVerificationTypeEnum.INCARCERATION_STATUS, ClockNameEnum.INCARCERATION_90);
		drools.setFocus("Aptc_RESID_1_AG");
		logger.debug("Rule : Aptc_Incarceration_2_1 : End");
end

rule "Aptc_Incarceration_2_2"
salience 6990
activation-group "Aptc_INCAR_2_AT"
agenda-group "Aptc_INCAR_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(fedIncarcerationStatus,
														(isIncarceration_90_NoticeSent),
														!(isIncarceration90ClockExpired));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_2_2 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_2_2");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.IC);
		$eDeterminationfacts.setClocks(ProgramCode.APTC, EligibilityVerificationTypeEnum.INCARCERATION_STATUS, ClockNameEnum.INCARCERATION_90);
		drools.setFocus("Aptc_RESID_1_AG");
		logger.debug("Rule : Aptc_Incarceration_2_2 : End");
end

rule "Aptc_Incarceration_2_3"
salience 6980
activation-group "Aptc_INCAR_2_AT"
agenda-group "Aptc_INCAR_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(fedIncarcerationStatus,
														(isIncarceration_90_NoticeSent),
														(isIncarceration90ClockExpired));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_2_3 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_2_3");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.INELIGIBLE, ProgramReasonCode.IC_90);
		drools.setFocus("Aptc_RESID_1_AG");
		logger.debug("Rule : Aptc_Incarceration_2_3 : End");
end

rule "Aptc_Incarceration_2_4"
salience 6970
activation-group "Aptc_INCAR_2_AT"
agenda-group "Aptc_INCAR_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!fedIncarcerationStatus,
														!(is1DayRerunSet));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_2_4 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_2_4");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.PENDING, ProgramReasonCode.IC);
		//TO DO
		$eDeterminationfacts.setClocks(ProgramCode.APTC, EligibilityVerificationTypeEnum.INCARCERATION_STATUS, ClockNameEnum.INCARCERATION_1);
		drools.setFocus("Aptc_RESID_1_AG");
		logger.debug("Rule : Aptc_Incarceration_2_4 : End");
end

rule "Aptc_Incarceration_2_5"
salience 6960
activation-group "Aptc_INCAR_2_AT"
agenda-group "Aptc_INCAR_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!fedIncarcerationStatus,
														(is1DayRerunSet),
														!(is1DayRerunExpired));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_2_5 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_2_5");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.PENDING, ProgramReasonCode.IC);
		$eDeterminationfacts.setClocks(ProgramCode.APTC, EligibilityVerificationTypeEnum.INCARCERATION_STATUS, ClockNameEnum.INCARCERATION_1);
		drools.setFocus("Aptc_RESID_1_AG");
		logger.debug("Rule : Aptc_Incarceration_2_5 : End");
end

rule "Aptc_Incarceration_2_6"
salience 6950
activation-group "Aptc_INCAR_2_AT"
agenda-group "Aptc_INCAR_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!fedIncarcerationStatus,
														(is1DayRerunSet),
														(is1DayRerunExpired),
														!(isIncarceration_90_NoticeSent),
														!(isHXIncarcerated));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_2_6 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_2_6");
		drools.setFocus("Aptc_RESID_1_AG");
		logger.debug("Rule : Aptc_Incarceration_2_6 : End");
end

rule "Aptc_Incarceration_2_7"
salience 6945
activation-group "Aptc_INCAR_2_AT"
agenda-group "Aptc_INCAR_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!fedIncarcerationStatus,
														(is1DayRerunSet),
														(is1DayRerunExpired),
														!(isIncarceration_90_NoticeSent),
														(isHXIncarcerated));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_2_7 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_2_7");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.IC);
		//TO DO
		//Schedule Verification Notice Trigger				
		$eDeterminationfacts.setClocks(ProgramCode.APTC, EligibilityVerificationTypeEnum.INCARCERATION_STATUS, ClockNameEnum.INCARCERATION_90);
		drools.setFocus("Aptc_RESID_1_AG");
		logger.debug("Rule : Aptc_Incarceration_2_7 : End");
end

rule "Aptc_Incarceration_2_8"
salience 6940
activation-group "Aptc_INCAR_2_AT"
agenda-group "Aptc_INCAR_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!fedIncarcerationStatus,
														(is1DayRerunSet),
														(is1DayRerunExpired),
														(isIncarceration_90_NoticeSent),
														!(isIncarceration90ClockExpired));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_2_8 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_2_8");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.IC);
		$eDeterminationfacts.setClocks(ProgramCode.APTC, EligibilityVerificationTypeEnum.INCARCERATION_STATUS, ClockNameEnum.INCARCERATION_90);
		drools.setFocus("Aptc_RESID_1_AG");
		logger.debug("Rule : Aptc_Incarceration_2_8 : End");
end

rule "Aptc_Incarceration_2_9"
salience 6935
activation-group "Aptc_INCAR_2_AT"
agenda-group "Aptc_INCAR_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!fedIncarcerationStatus,
														(is1DayRerunSet),
														(is1DayRerunExpired),
														(isIncarceration_90_NoticeSent),
														(isIncarceration90ClockExpired));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_2_9 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_2_9");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.INELIGIBLE, ProgramReasonCode.IC_90);
		drools.setFocus("Aptc_RESID_1_AG");
		logger.debug("Rule : Aptc_Incarceration_2_9 : End");
end

// Aptc Incarceration (3)


rule "Aptc_Incarceration_3_1"
salience 5000
activation-group "Aptc_INCAR_3_AT"
agenda-group "Aptc_INCAR_3_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isIncarceration_SelfIdentified_90_NoticeSent);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_3_1 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_3_1");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.IC_90_VN);
		$eDeterminationfacts.setClocks(ProgramCode.APTC, EligibilityVerificationTypeEnum.INCARCERATION_STATUS, ClockNameEnum.INCARCERATION_90);
		drools.setFocus("Aptc_RESID_1_AG");
		logger.debug("Rule : Aptc_Incarceration_3_1 : End");
end


rule "Aptc_Incarceration_3_2"
salience 4090
activation-group "Aptc_INCAR_3_AT"
agenda-group "Aptc_INCAR_3_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(isIncarceration_SelfIdentified_90_NoticeSent,
														!isIncarcerationSelfIdentified90ClockExpired);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_3_2 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_3_2");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.IC_90_VN);
		$eDeterminationfacts.setClocks(ProgramCode.APTC, EligibilityVerificationTypeEnum.INCARCERATION_STATUS, ClockNameEnum.INCARCERATION_90);
		drools.setFocus("Aptc_RESID_1_AG");
		logger.debug("Rule : Aptc_Incarceration_3_2 : End");
end


rule "Aptc_Incarceration_3_3"
salience 4080
activation-group "Aptc_INCAR_3_AT"
agenda-group "Aptc_INCAR_3_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(isIncarceration_SelfIdentified_90_NoticeSent,
														isIncarcerationSelfIdentified90ClockExpired);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Incarceration_3_3 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Incarceration_3_3");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC,program_status.INELIGIBLE, ProgramReasonCode.ICVSIP_90);
		drools.setFocus("Aptc_RESID_1_AG");
		logger.debug("Rule : Aptc_Incarceration_3_3 : End");
end


// Aptc Residency(1)

rule "Aptc_Residency_1_1"
salience 6000
activation-group "Aptc_RESID_1_AT"
agenda-group "Aptc_RESID_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(isResidencyVerified);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Residency_1_1 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Residency_1_1");		
		drools.setFocus("Aptc_AIAN_1_AG");
		logger.debug("Rule : Aptc_Residency_1_1 : End");
end

rule "Aptc_Residency_1_2"
salience 5990
activation-group "Aptc_RESID_1_AT"
agenda-group "Aptc_RESID_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isResidencyVerified,
														!isMovingToNY);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Residency_1_2 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Residency_1_2");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.INELIGIBLE, ProgramReasonCode.NNYSR);
		drools.setFocus("Aptc_AIAN_1_AG");
		logger.debug("Rule : Aptc_Residency_1_2 : End");
end

rule "Aptc_Residency_1_3"
salience 5980
activation-group "Aptc_RESID_1_AT"
agenda-group "Aptc_RESID_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isResidencyVerified,
														isMovingToNY);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Residency_1_3 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Residency_1_3");
		//drools.setFocus("Aptc_RESID_2_AG");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.INELIGIBLE, ProgramReasonCode.NNYSR);
		drools.setFocus("Aptc_AIAN_1_AG");
		logger.debug("Rule : Aptc_Residency_1_3 : End");
end

// Aptc Residency(2)
/*
rule "Aptc_Residency_2_1"
salience 5000
activation-group "Aptc_RESID_2_AT"
agenda-group "Aptc_RESID_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!(isResidencyVerificationNoticeSent));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Residency_2_1 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Residency_2_1");		
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.PENDING, ProgramReasonCode.RSNV);
		//TO DO
		//Schedule Verification Notice Trigger
		$eDeterminationfacts.setClocks(ProgramCode.APTC, EligibilityVerificationTypeEnum.STATE_RESIDENCY, ClockNameEnum.STATE_RESIDENCY_90);
		drools.setFocus("Aptc_AIAN_1_AG");
		logger.debug("Rule : Aptc_Residency_2_1 : End");
end

rule "Aptc_Residency_2_2"
salience 4990
activation-group "Aptc_RESID_2_AT"
agenda-group "Aptc_RESID_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts((isResidencyVerificationNoticeSent),
														!(isResidencyClockExpired));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Residency_2_2 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Residency_2_2");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.PENDING, ProgramReasonCode.RSNV);
		drools.setFocus("Aptc_AIAN_1_AG");
		logger.debug("Rule : Aptc_Residency_2_2 : End");
end

rule "Aptc_Residency_2_3"
salience 4980
activation-group "Aptc_RESID_2_AT"
agenda-group "Aptc_RESID_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts((isResidencyVerificationNoticeSent),
														(isResidencyClockExpired));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_Residency_2_3 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_Residency_2_3");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, program_status.INELIGIBLE, ProgramReasonCode.RSNV_90);
		drools.setFocus("Aptc_AIAN_1_AG");
		logger.debug("Rule : Aptc_Residency_2_3 : End");
end
*/

// Aptc AIAN(1)

rule "Aptc_AIAN_1_1"
salience 4000
activation-group "Aptc_AIAN_1_AT"
agenda-group "Aptc_AIAN_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isAIOrAN);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_AIAN_1_1 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_AIAN_1_1");
		$eDeterminationfacts.setIsAIANSpecialBenefits(Boolean.FALSE);
		$eDeterminationfacts.setRuleExecCompletionStep(ProgramCode.APTC, HXConstants.RULE_EXEC_STEP_SEC2_03);
		logger.debug("Rule : Aptc_AIAN_1_1 : End");
end

rule "Aptc_AIAN_1_2"
salience 3990
activation-group "Aptc_AIAN_1_AT"
agenda-group "Aptc_AIAN_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(isAIOrAN,
														!isAIOrANStatusVerified);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_AIAN_1_2 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_AIAN_1_2");
		$eDeterminationfacts.setIsAIANSpecialBenefits(Boolean.FALSE);
		drools.setFocus("Aptc_AIAN_2_AG");
		logger.debug("Rule : Aptc_AIAN_1_2 : End");
end

rule "Aptc_AIAN_1_3"
salience 3980
activation-group "Aptc_AIAN_1_AT"
agenda-group "Aptc_AIAN_1_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(isAIOrAN,
														isAIOrANStatusVerified);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_AIAN_1_3 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_AIAN_1_3");
		$eDeterminationfacts.setIsAIANSpecialBenefits(Boolean.TRUE);
		$eDeterminationfacts.setRuleExecCompletionStep(ProgramCode.APTC, HXConstants.RULE_EXEC_STEP_SEC2_03);
		logger.debug("Rule : Aptc_AIAN_1_3 : End");
end

// Aptc AIAN(2)

rule "Aptc_AIAN_2_0"
salience 2000
activation-group "Aptc_AIAN_2_AT"
agenda-group "Aptc_AIAN_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(isProposedElgForRenewal);
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_AIAN_2_0 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_AIAN_2_0");		
		$eDeterminationfacts.getElgRulesIndicatorForProgram(ProgramCode.APTC).setManualRenewalInd(Boolean.TRUE);
		$eDeterminationfacts.updateProgram(ProgramCode.APTC,program_status.INELIGIBLE, ProgramReasonCode.MRR);
		$eDeterminationfacts.setRuleExecCompletionStep(ProgramCode.APTC, HXConstants.RULE_EXEC_STEP_SEC2_03);
		logger.debug("Rule : Aptc_AIAN_2_0 : End");
end


rule "Aptc_AIAN_2_1"
salience 1995
activation-group "Aptc_AIAN_2_AT"
agenda-group "Aptc_AIAN_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isProposedElgForRenewal,
														!(isAIOrANVerificationNoticeSent));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_AIAN_2_1 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_AIAN_2_1");		
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.AIANSNV);
		//TO DO
		//Schedule Verification Notice Trigger
		$eDeterminationfacts.setClocks(ProgramCode.APTC, EligibilityVerificationTypeEnum.AMERICAN_INDIAN, ClockNameEnum.AMERICAN_INDIAN_90);
		$eDeterminationfacts.setIsAIANSpecialBenefits(Boolean.TRUE);
		$eDeterminationfacts.setRuleExecCompletionStep(ProgramCode.APTC, HXConstants.RULE_EXEC_STEP_SEC2_03);
		logger.debug("Rule : Aptc_AIAN_2_1 : End");
end

rule "Aptc_AIAN_2_2"
salience 1990
activation-group "Aptc_AIAN_2_AT"
agenda-group "Aptc_AIAN_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isProposedElgForRenewal,
														(isAIOrANVerificationNoticeSent),
														!(isAIOrANClockExpired));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_AIAN_2_2 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_AIAN_2_2");
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.AIANSNV);
		$eDeterminationfacts.setClocks(ProgramCode.APTC, EligibilityVerificationTypeEnum.AMERICAN_INDIAN, ClockNameEnum.AMERICAN_INDIAN_90);
		$eDeterminationfacts.setIsAIANSpecialBenefits(Boolean.TRUE);
		$eDeterminationfacts.setRuleExecCompletionStep(ProgramCode.APTC, HXConstants.RULE_EXEC_STEP_SEC2_03);
		logger.debug("Rule : Aptc_AIAN_2_2 : End");
end

rule "Aptc_AIAN_2_3"
salience 1980
activation-group "Aptc_AIAN_2_AT"
agenda-group "Aptc_AIAN_2_AG"
	when
		//<CONDITION>
		$eDeterminationfacts : EEDeterminationRuleFacts(!isProposedElgForRenewal,
														(isAIOrANVerificationNoticeSent),
														(isAIOrANClockExpired));
	then
		//<ACTIONS>
		logger.debug("Rule : Aptc_AIAN_2_3 : Begin");
		$eDeterminationfacts.updateRuleExec(ProgramCode.APTC, "Aptc_AIAN_2_3");		
		$eDeterminationfacts.updateProgram(ProgramCode.APTC, ProgramReasonCode.AIANSNV_90);
		$eDeterminationfacts.setIsAIANSpecialBenefits(Boolean.FALSE);
		$eDeterminationfacts.setRuleExecCompletionStep(ProgramCode.APTC, HXConstants.RULE_EXEC_STEP_SEC2_03);
		logger.debug("Rule : Aptc_AIAN_2_3 : End");
end